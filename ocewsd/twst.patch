Index: ocewsd.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- ocewsd.iml	(revision 10)
+++ ocewsd.iml	(revision )
@@ -1,9 +1,25 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<module type="JAVA_MODULE" version="4">
-  <component name="NewModuleRootManager" inherit-compiler-output="true">
-    <exclude-output />
+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="web" name="Web">
+      <configuration>
+        <descriptors>
+          <deploymentDescriptor name="web.xml" url="file://$MODULE_DIR$/webapp/WEB-INF/web.xml" />
+        </descriptors>
+        <webroots>
+          <root url="file://$MODULE_DIR$/src/main/webapp" relative="/" />
+        </webroots>
+      </configuration>
+    </facet>
+  </component>
+  <component name="NewModuleRootManager" inherit-compiler-output="false">
+    <output url="file://$MODULE_DIR$/target/classes" />
+    <output-test url="file://$MODULE_DIR$/target/test-classes" />
     <content url="file://$MODULE_DIR$">
       <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
+      <excludeFolder url="file://$MODULE_DIR$/.idea" />
+      <excludeFolder url="file://$MODULE_DIR$/build" />
+      <excludeFolder url="file://$MODULE_DIR$/target" />
     </content>
     <orderEntry type="inheritedJdk" />
     <orderEntry type="sourceFolder" forTests="false" />
Index: run.sh
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- run.sh	(revision 10)
+++ run.sh	(revision )
@@ -1,8 +1,10 @@
-echo CLEAN PROJECT ...
-yes | rm -r ./build/
-mkdir build
+#!/bin/sh
+clear
+echo =========================== Build by Maven ===================================
+mvn clean install
+echo =========================== Undeploying Calculator ===========================
+asadmin undeploy Calculator
+echo =========================== Deploying Calculator =============================
+asadmin deploy ./target/Calculator.war
+echo =========================== FINISH ===========================================
 
-yes | rm -r ./src/com/san/calculator
-
-echo GENERATE CALCULATOR ARTIFACT ...
-wsimport -d ./build -b ./web/WEB-INF/wsdl/binding.xml -s ./src -wsdllocation ./src/com/stub/wsdl ./web/WEB-INF/wsdl/Calculator.wsdl
Index: src/main/java/com/san/calculator/server/MathUtilImplSOAP12.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/san/calculator/server/MathUtilImplSOAP12.java	(revision )
+++ src/main/java/com/san/calculator/server/MathUtilImplSOAP12.java	(revision )
@@ -0,0 +1,12 @@
+package com.san.calculator.server;
+
+import javax.jws.WebService;
+
+@WebService(endpointInterface = "com.san.calculator.server.MathUtil", targetNamespace = "http://www.san.com/calculator",
+        serviceName = "Calculator", portName = "CalculatorTestPortName12")
+public class MathUtilImplSOAP12 {
+
+    public int addNumbers(int arg0, int arg1) {
+        return arg0 + arg1;
+    }
+}
Index: src/Main.java
===================================================================
--- src/Main.java	(revision 9)
+++ src/Main.java	(revision 9)
@@ -1,6 +0,0 @@
-public class Main {
-
-    public static void main(String[] args) {
-        System.out.println("Hello World!");
-    }
-}
Index: src/com/san/calculator/CalculatorService.java
===================================================================
--- src/com/san/calculator/CalculatorService.java	(revision 9)
+++ src/com/san/calculator/CalculatorService.java	(revision 9)
@@ -1,71 +0,0 @@
-
-package com.san.calculator;
-
-import java.net.MalformedURLException;
-import java.net.URL;
-import java.util.logging.Logger;
-import javax.xml.namespace.QName;
-import javax.xml.ws.Service;
-import javax.xml.ws.WebEndpoint;
-import javax.xml.ws.WebServiceClient;
-import javax.xml.ws.WebServiceFeature;
-
-
-/**
- * This class was generated by the JAX-WS RI.
- * JAX-WS RI 2.1.6 in JDK 6
- * Generated source version: 2.1
- * 
- */
-@WebServiceClient(name = "CalculatorService", targetNamespace = "http://www.san.com/calculator", wsdlLocation = "./src/com/stub/wsdl")
-public class CalculatorService
-    extends Service
-{
-
-    private final static URL CALCULATORSERVICE_WSDL_LOCATION;
-    private final static Logger logger = Logger.getLogger(com.san.calculator.CalculatorService.class.getName());
-
-    static {
-        URL url = null;
-        try {
-            URL baseUrl;
-            baseUrl = com.san.calculator.CalculatorService.class.getResource(".");
-            url = new URL(baseUrl, "./src/com/stub/wsdl");
-        } catch (MalformedURLException e) {
-            logger.warning("Failed to create URL for the wsdl Location: './src/com/stub/wsdl', retrying as a local file");
-            logger.warning(e.getMessage());
-        }
-        CALCULATORSERVICE_WSDL_LOCATION = url;
-    }
-
-    public CalculatorService(URL wsdlLocation, QName serviceName) {
-        super(wsdlLocation, serviceName);
-    }
-
-    public CalculatorService() {
-        super(CALCULATORSERVICE_WSDL_LOCATION, new QName("http://www.san.com/calculator", "CalculatorService"));
-    }
-
-    /**
-     * 
-     * @return
-     *     returns Calculator
-     */
-    @WebEndpoint(name = "CalculatorPort")
-    public Calculator getCalculatorPort() {
-        return super.getPort(new QName("http://www.san.com/calculator", "CalculatorPort"), Calculator.class);
-    }
-
-    /**
-     * 
-     * @param features
-     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
-     * @return
-     *     returns Calculator
-     */
-    @WebEndpoint(name = "CalculatorPort")
-    public Calculator getCalculatorPort(WebServiceFeature... features) {
-        return super.getPort(new QName("http://www.san.com/calculator", "CalculatorPort"), Calculator.class, features);
-    }
-
-}
Index: src/com/san/calculator/ObjectFactory.java
===================================================================
--- src/com/san/calculator/ObjectFactory.java	(revision 9)
+++ src/com/san/calculator/ObjectFactory.java	(revision 9)
@@ -1,71 +0,0 @@
-
-package com.san.calculator;
-
-import javax.xml.bind.JAXBElement;
-import javax.xml.bind.annotation.XmlElementDecl;
-import javax.xml.bind.annotation.XmlRegistry;
-import javax.xml.namespace.QName;
-
-
-/**
- * This object contains factory methods for each 
- * Java content interface and Java element interface 
- * generated in the com.san.calculator package. 
- * <p>An ObjectFactory allows you to programatically 
- * construct new instances of the Java representation 
- * for XML content. The Java representation of XML 
- * content can consist of schema derived interfaces 
- * and classes representing the binding of schema 
- * type definitions, element declarations and model 
- * groups.  Factory methods for each of these are 
- * provided in this class.
- * 
- */
-@XmlRegistry
-public class ObjectFactory {
-
-    private final static QName _AddNumbersResponse_QNAME = new QName("http://www.san.com/calculator", "addNumbersResponse");
-    private final static QName _AddNumbers_QNAME = new QName("http://www.san.com/calculator", "addNumbers");
-
-    /**
-     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.san.calculator
-     * 
-     */
-    public ObjectFactory() {
-    }
-
-    /**
-     * Create an instance of {@link AddNumbers }
-     * 
-     */
-    public AddNumbers createAddNumbers() {
-        return new AddNumbers();
-    }
-
-    /**
-     * Create an instance of {@link AddNumbersResponse }
-     * 
-     */
-    public AddNumbersResponse createAddNumbersResponse() {
-        return new AddNumbersResponse();
-    }
-
-    /**
-     * Create an instance of {@link JAXBElement }{@code <}{@link AddNumbersResponse }{@code >}}
-     * 
-     */
-    @XmlElementDecl(namespace = "http://www.san.com/calculator", name = "addNumbersResponse")
-    public JAXBElement<AddNumbersResponse> createAddNumbersResponse(AddNumbersResponse value) {
-        return new JAXBElement<AddNumbersResponse>(_AddNumbersResponse_QNAME, AddNumbersResponse.class, null, value);
-    }
-
-    /**
-     * Create an instance of {@link JAXBElement }{@code <}{@link AddNumbers }{@code >}}
-     * 
-     */
-    @XmlElementDecl(namespace = "http://www.san.com/calculator", name = "addNumbers")
-    public JAXBElement<AddNumbers> createAddNumbers(AddNumbers value) {
-        return new JAXBElement<AddNumbers>(_AddNumbers_QNAME, AddNumbers.class, null, value);
-    }
-
-}
Index: src/com/san/calculator/package-info.java
===================================================================
--- src/com/san/calculator/package-info.java	(revision 9)
+++ src/com/san/calculator/package-info.java	(revision 9)
@@ -1,2 +0,0 @@
-@javax.xml.bind.annotation.XmlSchema(namespace = "http://www.san.com/calculator")
-package com.san.calculator;
Index: src/main/java/com/san/calculator/server/MathUtilImplSOAP11.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/san/calculator/server/MathUtilImplSOAP11.java	(revision )
+++ src/main/java/com/san/calculator/server/MathUtilImplSOAP11.java	(revision )
@@ -0,0 +1,12 @@
+package com.san.calculator.server;
+
+import javax.jws.WebService;
+
+@WebService(endpointInterface = "com.san.calculator.server.MathUtil", targetNamespace = "http://www.san.com/calculator",
+        serviceName = "Calculator", portName = "CalculatorTestPortName11")
+public class MathUtilImplSOAP11 {
+
+    public int addNumbers(int arg0, int arg1) {
+        return arg0 + arg1;
+    }
+}
Index: src/main/webapp/WEB-INF/web.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
--- src/main/webapp/WEB-INF/web.xml	(revision )
+++ src/main/webapp/WEB-INF/web.xml	(revision )
@@ -0,0 +1,27 @@
+<?xml version="1.0" encoding="ISO-8859-1"?>
+<web-app xmlns="http://java.sun.com/xml/ns/javaee"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/j2ee/web-app_2_5.xsd"
+         version="2.5" >
+
+    <servlet>
+        <servlet-name>CalculatorSOAP11</servlet-name>
+        <servlet-class>com.san.calculator.server.MathUtilImplSOAP11</servlet-class>
+    </servlet>
+    <servlet-mapping>
+        <servlet-name>CalculatorSOAP11</servlet-name>
+        <url-pattern>/soap11</url-pattern>
+    </servlet-mapping>
+
+    <servlet>
+        <servlet-name>CalculatorSOAP12</servlet-name>
+        <servlet-class>com.san.calculator.server.MathUtilImplSOAP12</servlet-class>
+    </servlet>
+    <servlet-mapping>
+        <servlet-name>CalculatorSOAP12</servlet-name>
+        <url-pattern>/soap12</url-pattern>
+    </servlet-mapping>
+
+</web-app>
+
+
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- pom.xml	(revision )
+++ pom.xml	(revision )
@@ -0,0 +1,38 @@
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
+                      http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <modelVersion>4.0.0</modelVersion>
+
+    <!-- The Basics -->
+    <groupId>com.san.test</groupId>
+    <artifactId>test</artifactId>
+    <version>1.0</version>
+    <packaging>war</packaging>
+
+    <build>
+        <finalName>Calculator</finalName>
+        <plugins>
+            <plugin>
+                <groupId>org.apache.axis2</groupId>
+                <artifactId>axis2-java2wsdl-maven-plugin</artifactId>
+                <configuration>
+                    <className>com.san.calculator.server.MathUtil</className>
+                    <outputFileName>./src/main/webapp/WEB-INF/wsdl/Calculator.wsdl</outputFileName>
+                </configuration>
+                <executions>
+                    <execution>
+                        <goals>
+                            <goal>java2wsdl</goal>
+                        </goals>
+                    </execution>
+                </executions>
+            </plugin>
+        </plugins>
+    </build>
+
+
+    <!-- More Project Information -->
+    <name>Test</name>
+    <description>San test</description>
+</project>
\ No newline at end of file
Index: src/restful/san/RESTClient.java
===================================================================
--- src/restful/san/RESTClient.java	(revision 9)
+++ src/restful/san/RESTClient.java	(revision 9)
@@ -1,27 +0,0 @@
-package restful.san;
-
-import java.io.BufferedReader;
-import java.io.IOException;
-import java.io.InputStreamReader;
-import java.net.MalformedURLException;
-import java.net.URL;
-import java.net.URLConnection;
-public class RESTClient {
-    public static void main(String[] args) {
-        try {
-            URL twitter = new URL("http://twitter.com/statuses/public_timeline.xml");
-                    URLConnection tc = twitter.openConnection();
-            BufferedReader in = new BufferedReader(new InputStreamReader(
-                    tc.getInputStream()));
-            String line;
-            while ((line = in.readLine()) != null) {
-                System.out.println(line);
-            }
-            in.close();
-        } catch (MalformedURLException e) {
-            e.printStackTrace();
-        } catch (IOException e) {
-            e.printStackTrace();
-        }
-    }
-}
Index: startdomain.sh
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- startdomain.sh	(revision )
+++ startdomain.sh	(revision )
@@ -0,0 +1,4 @@
+#!/bin/sh
+echo =========================== Restarting Domain ===================================
+asadmin stop-domain
+asadmin start-domain
\ No newline at end of file
Index: src/com/san/calculator/Calculator.java
===================================================================
--- src/com/san/calculator/Calculator.java	(revision 9)
+++ src/com/san/calculator/Calculator.java	(revision 9)
@@ -1,38 +0,0 @@
-
-package com.san.calculator;
-
-import javax.jws.WebMethod;
-import javax.jws.WebParam;
-import javax.jws.WebResult;
-import javax.jws.WebService;
-import javax.jws.soap.SOAPBinding;
-import javax.xml.bind.annotation.XmlSeeAlso;
-
-
-/**
- * This class was generated by the JAX-WS RI.
- * JAX-WS RI 2.1.6 in JDK 6
- * Generated source version: 2.1
- * 
- */
-@WebService(name = "Calculator", targetNamespace = "http://www.san.com/calculator")
-@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
-@XmlSeeAlso({
-    ObjectFactory.class
-})
-public interface Calculator {
-
-
-    /**
-     * 
-     * @param parameters
-     * @return
-     *     returns com.san.calculator.AddNumbersResponse
-     */
-    @WebMethod(action = "urn:Add")
-    @WebResult(name = "addNumbersResponse", targetNamespace = "http://www.san.com/calculator", partName = "parameters")
-    public AddNumbersResponse addNumbers(
-        @WebParam(name = "addNumbers", targetNamespace = "http://www.san.com/calculator", partName = "parameters")
-        AddNumbers parameters);
-
-}
Index: test.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- test.iml	(revision )
+++ test.iml	(revision )
@@ -0,0 +1,29 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="web" name="Web">
+      <configuration>
+        <descriptors>
+          <deploymentDescriptor name="web.xml" url="file://$MODULE_DIR$/src/main/webapp/WEB-INF/web.xml" />
+        </descriptors>
+        <webroots>
+          <root url="file://$MODULE_DIR$/src/main/webapp" relative="/" />
+        </webroots>
+      </configuration>
+    </facet>
+  </component>
+  <component name="NewModuleRootManager" inherit-compiler-output="false">
+    <output url="file://$MODULE_DIR$/target/classes" />
+    <output-test url="file://$MODULE_DIR$/target/test-classes" />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
+      <excludeFolder url="file://$MODULE_DIR$/.idea" />
+      <excludeFolder url="file://$MODULE_DIR$/build" />
+      <excludeFolder url="file://$MODULE_DIR$/target" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
+
Index: src/main/java/com/san/development/DevelopmentServer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/san/development/DevelopmentServer.java	(revision )
+++ src/main/java/com/san/development/DevelopmentServer.java	(revision )
@@ -0,0 +1,14 @@
+package com.san.development;
+
+import java.io.IOException;
+
+public class DevelopmentServer {
+    public static void main(String[] args) {
+
+    }
+
+    public void execute(String command) throws IOException {
+        Runtime runTime = Runtime.getRuntime();
+        Process process = runTime.exec(command);
+    }
+}
Index: src/com/san/calculator/AddNumbers.java
===================================================================
--- src/com/san/calculator/AddNumbers.java	(revision 9)
+++ src/com/san/calculator/AddNumbers.java	(revision 9)
@@ -1,71 +0,0 @@
-
-package com.san.calculator;
-
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlType;
-
-
-/**
- * <p>Java class for addNumbers complex type.
- * 
- * <p>The following schema fragment specifies the expected content contained within this class.
- * 
- * <pre>
- * &lt;complexType name="addNumbers">
- *   &lt;complexContent>
- *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
- *       &lt;sequence>
- *         &lt;element name="arg0" type="{http://www.w3.org/2001/XMLSchema}int"/>
- *         &lt;element name="arg1" type="{http://www.w3.org/2001/XMLSchema}int"/>
- *       &lt;/sequence>
- *     &lt;/restriction>
- *   &lt;/complexContent>
- * &lt;/complexType>
- * </pre>
- * 
- * 
- */
-@XmlAccessorType(XmlAccessType.FIELD)
-@XmlType(name = "addNumbers", propOrder = {
-    "arg0",
-    "arg1"
-})
-public class AddNumbers {
-
-    protected int arg0;
-    protected int arg1;
-
-    /**
-     * Gets the value of the arg0 property.
-     * 
-     */
-    public int getArg0() {
-        return arg0;
-    }
-
-    /**
-     * Sets the value of the arg0 property.
-     * 
-     */
-    public void setArg0(int value) {
-        this.arg0 = value;
-    }
-
-    /**
-     * Gets the value of the arg1 property.
-     * 
-     */
-    public int getArg1() {
-        return arg1;
-    }
-
-    /**
-     * Sets the value of the arg1 property.
-     * 
-     */
-    public void setArg1(int value) {
-        this.arg1 = value;
-    }
-
-}
Index: src/com/san/calculator/AddNumbersResponse.java
===================================================================
--- src/com/san/calculator/AddNumbersResponse.java	(revision 9)
+++ src/com/san/calculator/AddNumbersResponse.java	(revision 9)
@@ -1,54 +0,0 @@
-
-package com.san.calculator;
-
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlElement;
-import javax.xml.bind.annotation.XmlType;
-
-
-/**
- * <p>Java class for addNumbersResponse complex type.
- * 
- * <p>The following schema fragment specifies the expected content contained within this class.
- * 
- * <pre>
- * &lt;complexType name="addNumbersResponse">
- *   &lt;complexContent>
- *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
- *       &lt;sequence>
- *         &lt;element name="return" type="{http://www.w3.org/2001/XMLSchema}int"/>
- *       &lt;/sequence>
- *     &lt;/restriction>
- *   &lt;/complexContent>
- * &lt;/complexType>
- * </pre>
- * 
- * 
- */
-@XmlAccessorType(XmlAccessType.FIELD)
-@XmlType(name = "addNumbersResponse", propOrder = {
-    "_return"
-})
-public class AddNumbersResponse {
-
-    @XmlElement(name = "return")
-    protected int _return;
-
-    /**
-     * Gets the value of the return property.
-     * 
-     */
-    public int getReturn() {
-        return _return;
-    }
-
-    /**
-     * Sets the value of the return property.
-     * 
-     */
-    public void setReturn(int value) {
-        this._return = value;
-    }
-
-}
Index: src/main/java/com/san/calculator/server/MathUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/san/calculator/server/MathUtil.java	(revision )
+++ src/main/java/com/san/calculator/server/MathUtil.java	(revision )
@@ -0,0 +1,25 @@
+
+package com.san.calculator.server;
+
+
+import javax.jws.WebMethod;
+import javax.jws.WebParam;
+import javax.jws.WebResult;
+import javax.jws.WebService;
+import javax.xml.bind.annotation.XmlSeeAlso;
+import javax.xml.ws.RequestWrapper;
+import javax.xml.ws.ResponseWrapper;
+
+
+/**
+ * This class was generated by the JAX-WS RI.
+ * JAX-WS RI 2.1.6 in JDK 6
+ * Generated source version: 2.1
+ * 
+ */
+@WebService(name = "Calculator", targetNamespace = "http://www.san.com/calculator")
+public interface MathUtil {
+
+    @WebMethod
+    public int addNumbers(int arg0, int arg1);
+}
